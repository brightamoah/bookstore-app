services:
  csharp-backend:
    build:
      context: ./Backend
      dockerfile: Dockerfile
    container_name: csharp-backend
    restart: unless-stopped
    init: true
    # The backend expects a MySQL database and uses environment variables for configuration
    environment:
      # Set ASP.NET Core environment (override as needed)
      - ASPNETCORE_ENVIRONMENT=Production
      # The following are required for the backend to connect to the database and for JWT auth
      # Set these in a .env file or via your deployment platform
      # - DATABASE_URL=server=mysql-db;port=3306;database=bookstore;user=root;password=example
      # - JWT_SECRET=your-super-secret-jwt-key-32-characters
      # - JWT_ISSUER=BookstoreApi
      # - JWT_AUDIENCE=BookstoreClient
    # Uncomment the next line if you have a .env file with secrets
    # env_file: ./Backend/.env  # Uncomment if .env file exists
    ports:
      - "8080:8080"  # Exposes backend API and Swagger
    depends_on:
      mysql-db:
        condition: service_healthy
    networks:
      - bookstore-net

  typescript-frontend:
    build:
      context: ./frontend
      dockerfile: ../frontendDockerfile
    container_name: typescript-frontend
    restart: unless-stopped
    init: true
    # Uncomment the next line if you have a .env file for frontend config
    # env_file: ./frontend/.env  # Uncomment if .env file exists
    ports:
      - "4000:4000"  # Exposes the static frontend
    networks:
      - bookstore-net
    # The frontend will call the backend at http://localhost:8080 (adjust as needed)

  mysql-db:
    image: mysql:latest
    container_name: mysql-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: example  # Change this in production!
      MYSQL_DATABASE: bookstore
      MYSQL_USER: bookstore
      MYSQL_PASSWORD: bookstorepass
    ports:
      - "3306:3306"  # Expose for local dev, remove in production
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bookstore-net
    # Uncomment the following to persist database data
    # volumes:
    #   - mysql-data:/var/lib/mysql

networks:
  bookstore-net:
    driver: bridge

# Uncomment the following if you want to persist MySQL data
#volumes:
#  mysql-data:
#    driver: local
